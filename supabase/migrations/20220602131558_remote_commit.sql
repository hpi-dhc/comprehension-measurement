-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE OR REPLACE FUNCTION public.increment_total_answers(
	row_id integer)
    RETURNS void
    LANGUAGE 'sql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
  update questions
  set total_answers = total_answers + 1
  where id = row_id;
$BODY$;

ALTER FUNCTION public.increment_total_answers(integer)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.increment_total_answers(integer) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.increment_total_answers(integer) TO anon;

GRANT EXECUTE ON FUNCTION public.increment_total_answers(integer) TO authenticated;

GRANT EXECUTE ON FUNCTION public.increment_total_answers(integer) TO postgres;

GRANT EXECUTE ON FUNCTION public.increment_total_answers(integer) TO service_role;

GRANT EXECUTE ON FUNCTION public.increment_total_answers(integer) TO supabase_admin;

CREATE OR REPLACE FUNCTION public.increment_correct_answers(
	row_id integer)
    RETURNS void
    LANGUAGE 'sql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
  update questions
  set correct_answers = correct_answers + 1
  where id = row_id;
$BODY$;

ALTER FUNCTION public.increment_correct_answers(integer)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.increment_correct_answers(integer) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.increment_correct_answers(integer) TO anon;

GRANT EXECUTE ON FUNCTION public.increment_correct_answers(integer) TO authenticated;

GRANT EXECUTE ON FUNCTION public.increment_correct_answers(integer) TO postgres;

GRANT EXECUTE ON FUNCTION public.increment_correct_answers(integer) TO service_role;

GRANT EXECUTE ON FUNCTION public.increment_correct_answers(integer) TO supabase_admin;

CREATE OR REPLACE FUNCTION public.select_answer(
	row_id integer)
    RETURNS void
    LANGUAGE 'sql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
  update answers
  set times_selected = times_selected + 1
  where id = row_id;
$BODY$;

ALTER FUNCTION public.select_answer(integer)
    OWNER TO supabase_admin;

GRANT EXECUTE ON FUNCTION public.select_answer(integer) TO PUBLIC;

GRANT EXECUTE ON FUNCTION public.select_answer(integer) TO anon;

GRANT EXECUTE ON FUNCTION public.select_answer(integer) TO authenticated;

GRANT EXECUTE ON FUNCTION public.select_answer(integer) TO postgres;

GRANT EXECUTE ON FUNCTION public.select_answer(integer) TO service_role;

GRANT EXECUTE ON FUNCTION public.select_answer(integer) TO supabase_admin;

REVOKE ALL ON TABLE public.questions FROM authenticated;
REVOKE ALL ON TABLE public.questions FROM postgres;
REVOKE ALL ON TABLE public.questions FROM service_role;
GRANT ALL ON TABLE public.questions TO authenticated;

GRANT ALL ON TABLE public.questions TO postgres;

GRANT ALL ON TABLE public.questions TO service_role;

REVOKE ALL ON TABLE public.answers FROM authenticated;
REVOKE ALL ON TABLE public.answers FROM postgres;
REVOKE ALL ON TABLE public.answers FROM service_role;
GRANT ALL ON TABLE public.answers TO authenticated;

GRANT ALL ON TABLE public.answers TO postgres;

GRANT ALL ON TABLE public.answers TO service_role;

REVOKE ALL ON TABLE public.text_answers FROM authenticated;
REVOKE ALL ON TABLE public.text_answers FROM postgres;
REVOKE ALL ON TABLE public.text_answers FROM service_role;
GRANT ALL ON TABLE public.text_answers TO authenticated;

GRANT ALL ON TABLE public.text_answers TO postgres;

GRANT ALL ON TABLE public.text_answers TO service_role;

REVOKE ALL ON TABLE public.surveys FROM authenticated;
REVOKE ALL ON TABLE public.surveys FROM postgres;
REVOKE ALL ON TABLE public.surveys FROM service_role;
GRANT ALL ON TABLE public.surveys TO authenticated;

GRANT ALL ON TABLE public.surveys TO postgres;

GRANT ALL ON TABLE public.surveys TO service_role;
